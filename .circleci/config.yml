version: 2.1

executors:
  macos-m1-15_1:
    macos:
      xcode: 15.1.0
    resource_class: macos.m1.medium.gen1
  macos-intel-15_1:
    macos:
      xcode: 15.1.0
    resource_class: macos.x86.medium.gen2
 
orbs:
  jq: circleci/jq@3.0.0
  

jobs:
  my_intel_job:
    executor: macos-intel-15_1
    steps:
      #- jq/install
      - run: 
          name: "Basic command"
          command: |
              echo "random value number 8"
    
  my_m1_job:
    executor: macos-m1-15_1
    steps:
      #- jq/install
      - run: 
          name: "Basic command"
          command: |
              echo "random value"

workflows:
  the_best_workflow:
    jobs:
      - my_intel_job
      - my_m1_job


# version: '2.1'

# # setup: true

# # orbs:
# #   continuation: circleci/continuation@0.1
# #   orby: orb-space/orb-project@1.0.4

# parameters:
#   executor-name:
#     type: string
#     default: "first-executor"
  
#   trigger:
#     type: boolean
#     default: true

# executors:
#   first-executor:
#     docker:
#       - image: cimg/ruby:3.0.3-browsers
    
#   second-executor:
#     docker:
#       - image: cimg/node:21.2.0




# jobs:
#   test_docker:
#     executor: << pipeline.parameters.executor-name >>
#     steps:
#       - run: echo "this executor is " << pipeline.parameters.executor-name >>
#       # - orby/greet:
#       #     to: << pipeline.parameters.executor-name >>

# workflows:
#   setup_workflow:
#     jobs:
#       # - continuation/continue:
#       #     configuration_path: ./.circleci/continue_config.yml
#       #     parameters: /home/circleci/parameters.json
#       #     pre-steps:
#       #       - run:
#       #           command: |
#       #             echo '{ "author": "'$CIRCLE_USERNAME'" }' >> /home/circleci/parameters.json 
#       - test_docker
#     when:
#       and:
#         - not: << pipeline.git.tag >>
#         - << pipeline.parameters.trigger >>
# # < we can't directly insert the env var into the parameters value




# ################################################# STORAGE ###########################################################

        # auth:
        #   username: $DOCKER_USERNAME
        #   password: $DOCKER_PASSWORD

# version: 2.1
# jobs:
#   normal:
#     machine: 
#       image: ubuntu-1604:201903-01
#     steps:
#       - checkout
#       - run: 
#           command: |
#             sudo apt-get install unzip | while read line ; do echo "$(date +"%T") > $line" ; done 

# # Invoke jobs via workflows
# # See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   workflow:
#     jobs:
#       - normal
# jobs:
#   regular:
#     docker:
#       - image: cimg/node:17.1.0
#         auth:
#           username: $DOCKER_USERNAME
#           password: $DOCKER_PASSWORD
#     working_directory: /mnt/ramdisk
#     steps:
#       - checkout
#       - run: ls -al
#       - run: mkdir unzipped
#       - run: ls -al unzipped
#       - run: 
#           command: |
#             sudo apt-get install unzip
#             unzip rando_file/dummy.txt.zip -d unzipped
#       - run: ls -al unzipped
#       - run: pwd

#   followup:
#     docker:
#       - image: cimg/node:17.1.0
#         auth:
#           username: $DOCKER_USERNAME
#           password: $DOCKER_PASSWORD
#     working_directory: /mnt/ramdisk
#     steps:
#       - run: ls -al unzipped
#       - persist_to_workspace:
#           root: .
#           path: 

# workflows:
#   normal:
#     jobs:
#       - regular
#       - followup:
#           requires:
#             - regular
# # YAML anchor "build" to prevent duplication in CircleCI jobs section.
# version: 2.1

# #setup: true

# # orbs:
# #   continuation: circleci/continuation@0.2.0

# # jobs:
# #   docker_build:
# #     docker:
# #       - image: cimg/base:2021.04
# #     steps:
# #       - checkout
# #       - continuation/continue:
# #           configuration_path: .circleci/build_docker_images.yml

# # workflows:
# #   default:
# #     jobs:
# #       - docker_build

# # # orbs:
# # #   python: circleci/python@1.4.0

# # parameters:
# #   run_by_api:
# #     type: boolean
# #     default: false
# #   class_size:
# #     type: string
# #     default: large
# #   zuid:
# #     type: string
# #     default: CIRCLE_PROJECT_USERNAME
# #   zuidq:
# #     type: string
# #     default: "<@$COMMITTER_USER_ID>"

# jobs:
#   regular:
#     docker:
#       - image: cimg/node:17.1.0
#         auth:
#           username: $DOCKER_USERNAME
#           password: $DOCKER_PASSWORD
#     # machine:
#     #   image: ubuntu-2004-cuda-11.4:202110-01
#     # machine:
#     #   image: ubuntu-2004:202101-01
#     # resource_class: arm.large #plz use aws
#     # macos:
#     #   xcode: 12.5.1
#     #resource_class: macos.x86.medium.gen2
#     #working_directory: ~/my-app
#     steps:
#       - checkout
#       - run: npm -v
#       - run: echo "Hello world"
#       - persist_to_workspace:
#           root: /mnt/ramdisk
#           paths:
#             - test-results
#       # - run: sudo apt-get install cloud-utils
#       # - run: ec2metadata --instance-id
#       # - python/install-packages
#       # - run: 
#       #     command: |
#       #       wget http://s3.amazonaws.com/ec2metadata/ec2-metadata
#       #       chmod u+x ec2-metadata
#       #       ./ec2-metadata --help
#       # # - run: sudo ./ec2-metadata -i
#       # - run: ls -a
#       # - run: exit 1
#       # - store_test_results:
#       #     path: test-results
#       # - store_artifacts:
#       #     path: test-results
#   followup:
#     docker:
#       - image: cimg/node:17.1.0
#         auth:
#           username: $DOCKER_USERNAME
#           password: $DOCKER_PASSWORD
#     steps:
#       - attach_workspace:
#           at: /mnt/ramdisk

# jobs:
#   regular:
#     machine: # executor type
#       image: ubuntu-2004:202010-01 
#     resource_class: xlarge
#     steps:
#       - checkout
#       - run: echo "Hello world"
#       - run: sudo apt-get update
#       - run: echo "surface/subterrain branch" #test for pull request

# workflows:
#   normal:
#     jobs:
#       - regular


# workflow:
#   code_example:
#     jobs:
#       - build_initiatives
#       - hold:
#           type: approval
#           requires:
#             - build_initiatives
#       - check_vulnerabilities:
#           name: check_initiatives_vulnerabilities
#           service: initiatives
#           requires:
#             - build_initiatives
#           context: snyk
#           filters:
#             branches:
#               only:
#                 - develop
#                 - master
#       - check_vulnerabilities_hold:
#           name: check_initiatives_vulnerabilities
#           service: initiatives
#           requires:
#             - build_initiatives
#             - hold
#           context: snyk
#           filters:
#             branches:
#               ignore:
#                 - develop
#                 - master

# #   # api-job:
# #   #   docker:
# #   #     - image: cimg/base:stable
# #   #   steps:
# #   #     - checkout
# #   #     - run: echo "I was run by API"


# workflows:
#   normal:
#     jobs:
#       - regular
#       - followup:
#           requires:
#             - regular

# #   # api-workflow:
# #   #   when: << pipeline.parameters.run_by_api >> # Add condition to execute this workflow when condition-workflow is equal to true
# #   #   jobs:
# #   #     - api-job

# VS Code Extension Version: 1.5.1